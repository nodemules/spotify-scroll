{"version":3,"sources":["SpotifyStatsApi.ts","RandomTrack.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["get","axios","RandomTrack","useState","error","setError","track","setTrack","useEffect","then","res","data","catch","href","external_urls","target","rel","src","album","images","url","alt","name","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAEOA,E,OAAOC,EAAPD,I,OC6BQE,EA5BK,WAChB,MAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA0BF,qBAA1B,mBAAOG,EAAP,KAAcC,EAAd,KASA,OAPAC,qBAAU,WDsBVR,EAAI,GAAD,OAzBM,4CAyBN,yBACFS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,QCrBZF,KAAKF,GACLE,MAAK,kBAAMJ,GAAS,MACpBO,OAAM,kBAAMP,GAAS,QACvB,IAECD,EAAe,qEAEfE,EACI,mCACI,mBACIO,KAAMP,EAAMQ,cAAN,QACNC,OAAQ,SACRC,IAAI,sBAHR,SAKI,qBAAKC,IAAKX,EAAMY,MAAMC,OAAO,GAAGC,IAAKC,IAAKf,EAAMY,MAAMI,WAI9D,iECJGC,EAnBH,kBACR,sBAAKC,UAAU,MAAf,UACI,wBAAQA,UAAU,aAAlB,SACI,2CAEI,mBACIA,UAAU,WACVX,KAAK,0BACLE,OAAO,SACPC,IAAI,sBAJR,0BAUR,cAAC,EAAD,QCLOS,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1f87f87e.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst {get} = axios\n\nconst host = \"https://afternoon-tor-36303.herokuapp.com\"\n\nexport type Track = {\n    id: string\n    name: string\n    uri: string\n    href: string\n    popularity: number\n    album: Album\n    external_urls: Record<string, string>\n    duration_ms: number\n}\n\nexport type Album = {\n    images: Image[]\n    name: string\n}\n\nexport type Image = {\n    url: string\n    height: number\n    width: number\n}\n\nexport const getRandomTrack = (): Promise<Track> =>\n    get(`${host}/track/recent/random`)\n    .then(res => res.data as Track)\n","import {useEffect, useState} from \"react\";\nimport {getRandomTrack, Track} from \"./SpotifyStatsApi\";\n\nconst RandomTrack = () => {\n    const [error, setError] = useState(false)\n    const [track, setTrack] = useState<Track>()\n\n    useEffect(() => {\n        getRandomTrack()\n        .then(setTrack)\n        .then(() => setError(false))\n        .catch(() => setError(true))\n    }, [])\n\n    if (error) return (<>Unable to find a random track</>)\n    return (\n        track ?\n            <>\n                <a\n                    href={track.external_urls['spotify']}\n                    target={\"_blank\"}\n                    rel=\"noreferrer noopener\"\n                >\n                    <img src={track.album.images[0].url} alt={track.album.name}/>\n                </a>\n            </>\n            :\n            <>Searching for a track...</>\n    )\n}\n\nexport default RandomTrack\n","import React from 'react';\nimport './App.css';\nimport RandomTrack from \"./RandomTrack\";\n\nconst App = () => (\n    <div className=\"App\">\n        <header className=\"App-header\">\n            <p>\n                Scroll&nbsp;\n                <a\n                    className=\"App-link\"\n                    href=\"https://www.spotify.com\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                >\n                    Spotify\n                </a>\n            </p>\n        </header>\n        <RandomTrack/>\n    </div>\n)\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}